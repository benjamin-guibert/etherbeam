name: Test

on: [push]

jobs:
  test-server:
    name: Test Server
    runs-on: ubuntu-latest
    env:
      WORKING_DIRECTORY: ./packages/server
      RAILS_ENV: test

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Get Ruby version
        id: rbenv
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: echo "::set-output name=RUBY_VERSION::$(cat .ruby-version)"

      - name: Set up Ruby ${{ steps.rbenv.outputs.RUBY_VERSION }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "${{ steps.rbenv.outputs.RUBY_VERSION }}"

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run Rubocop
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: bundle exec rubocop --parallel

      - name: Start database Docker container
        run: docker-compose -f docker-compose.test.yml up -d database

      - name: Set up database
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: bundle exec rake db:setup

      - name: Run tests
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: bundle exec rspec

  test-eth-server:
    name: Test Ethereum Server
    runs-on: ubuntu-latest
    env:
      WORKING_DIRECTORY: ./packages/eth-server
      NODE_ENV: test

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Get the Node version
        id: node
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: echo "::set-output name=NODE_VERSION::$(cat .node-version)"

      - name: Set up Node ${{ steps.node.outputs.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.node.outputs.NODE_VERSION }}"

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn install

      - name: Run Lint
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn lint

      - name: Run tests
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn test

  test-client:
    name: Test Client
    runs-on: ubuntu-latest
    env:
      WORKING_DIRECTORY: ./packages/client
      NODE_ENV: test

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Get the Node version
        id: node
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: echo "::set-output name=NODE_VERSION::$(cat .node-version)"

      - name: Set up Node ${{ steps.node.outputs.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.node.outputs.NODE_VERSION }}"

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn install --non-interactive

      - name: Run Lint
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn lint

      - name: Run tests
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn test
